{"ast":null,"code":"var _jsxFileName = \"/home/lois/Documentos/filmlist/Project-film-list/film-list/src/components/Lista.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport context from '../context/context';\nimport './movies_posters.css';\nimport Header from './Header';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Lista() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [trailer, setTrailer] = useState({});\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const [searchValue, setSearchValue] = useState('');\n  const [playTrailer, setPlayTrailer] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [dropdownClick, setDropDownClick] = useState(true);\n  const img_path = 'https://image.tmdb.org/t/p/';\n  const url = 'https://api.themoviedb.org/3';\n\n  const fetchMovies = async searchValue => {\n    const type = searchValue ? `search/multi?api_key=3e9594956f7bdfe6a28130cd66f6d581&language=en-Us&query=${searchValue}&page=1&include_adult=false` : 'discover/movie?api_key=3e9594956f7bdfe6a28130cd66f6d581';\n    const data = await fetch(`${url}/${type}`).then(response => response.json()).catch(err => console.log(err));\n    setMovies(data.results);\n    setSelectedMovie(data.results[0]);\n    return fetchVids(selectedMovie.id);\n  };\n\n  const fetchVids = async id => {\n    const data = await fetch(`${url}/movie/${id}/videos?api_key=3e9594956f7bdfe6a28130cd66f6d581&language=en-US`).then(res => res.json()).catch(err => console.log(err));\n    const oficial = data.results.find(film => film.name.includes('Official'));\n    setTrailer(oficial);\n  };\n\n  const fetchCategories = async () => {\n    const {\n      genres\n    } = await fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=3e9594956f7bdfe6a28130cd66f6d581&language=en-US').then(res => res.json()).catch(err => console.log(err));\n    console.log(genres);\n    setCategories(genres);\n  };\n\n  const setDropDwn = () => {\n    setDropDownClick(!dropdownClick);\n  };\n\n  const settrailer = () => {\n    setPlayTrailer(true);\n  };\n\n  const closeTrailer = () => {\n    setPlayTrailer(false);\n  };\n\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchValue);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-content max-center\",\n      style: {\n        backgroundImage: `url(${img_path}original/${selectedMovie.backdrop_path})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero\",\n        children: [playTrailer ? /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: trailer.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => settrailer(),\n          id: \"hero-button\",\n          children: \"Play trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), playTrailer ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => closeTrailer(),\n          children: \"Close trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"hero-title\",\n          children: selectedMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hero-overview\",\n          children: selectedMovie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovies,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"select-label\",\n          children: \"Browse by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: categories.map(ctgrs => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ctgrs.name,\n            children: ctgrs.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-movie\",\n          placeholder: \"Find a film\",\n          onChange: e => setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-btn\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container-posters\",\n      children: movies.map(filmes => filmes.poster_path ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"moviePoster\",\n          onClick: fetchVids(filmes.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${img_path}w500/${filmes.poster_path}`,\n            alt: `${filmes.original_title} poster`,\n            onClick: () => setSelectedMovie(filmes)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: filmes.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \" Add to watchlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"No poster found\", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", filmes.original_title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Lista, \"6CiiyfqpcR6zxnepBxTSYIUIJbc=\");\n\n_c = Lista;\nexport default Lista;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lista\");","map":{"version":3,"names":["React","useContext","useEffect","useState","context","Header","YouTube","Lista","movies","setMovies","trailer","setTrailer","selectedMovie","setSelectedMovie","searchValue","setSearchValue","playTrailer","setPlayTrailer","categories","setCategories","dropdownClick","setDropDownClick","img_path","url","fetchMovies","type","data","fetch","then","response","json","catch","err","console","log","results","fetchVids","id","res","oficial","find","film","name","includes","fetchCategories","genres","setDropDwn","settrailer","closeTrailer","searchMovies","e","preventDefault","backgroundImage","backdrop_path","key","title","overview","map","ctgrs","target","value","filmes","poster_path","original_title"],"sources":["/home/lois/Documentos/filmlist/Project-film-list/film-list/src/components/Lista.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport context from'../context/context';\nimport './movies_posters.css';\nimport Header from './Header';\nimport YouTube from 'react-youtube';\n\nfunction Lista(){\n\n    const [movies, setMovies] = useState([]);\n    const [trailer, setTrailer ] = useState({});\n    const [selectedMovie, setSelectedMovie] = useState({});\n    const [searchValue, setSearchValue ] = useState('');\n    const [playTrailer, setPlayTrailer] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [dropdownClick, setDropDownClick] = useState(true);\n    const img_path = 'https://image.tmdb.org/t/p/'\n    const url = 'https://api.themoviedb.org/3'\n     \n    const fetchMovies = async (searchValue) => {\n        const type = searchValue ? `search/multi?api_key=3e9594956f7bdfe6a28130cd66f6d581&language=en-Us&query=${searchValue}&page=1&include_adult=false` : 'discover/movie?api_key=3e9594956f7bdfe6a28130cd66f6d581'\n        const data = await fetch(`${url}/${type}`)\n        .then((response) => (response.json()))\n        .catch((err) => console.log(err));\n        setMovies(data.results);\n        setSelectedMovie(data.results[0])\n        return fetchVids(selectedMovie.id);\n    }\n\n    const fetchVids = async (id) =>{\n        const data = await fetch(`${url}/movie/${id}/videos?api_key=3e9594956f7bdfe6a28130cd66f6d581&language=en-US`)\n        .then((res) => res.json())\n        .catch((err) => console.log(err))\n        const oficial = data.results.find((film) => film.name.includes('Official'));\n    \n        setTrailer(oficial);\n    }\n\n    const fetchCategories = async () => {\n        const {genres} = await fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=3e9594956f7bdfe6a28130cd66f6d581&language=en-US')\n        .then((res) => res.json())\n        .catch((err) => console.log(err))\n        console.log(genres);\n        setCategories(genres);\n    }\n\n    const setDropDwn= () =>{\n        setDropDownClick(!dropdownClick);\n    }\n\n    const settrailer = () =>{\n        setPlayTrailer(true);\n    }\n    \n    const closeTrailer = () =>{\n        setPlayTrailer(false);\n    }\n    \n\n    const searchMovies = (e) => {\n        e.preventDefault();\n       fetchMovies(searchValue);\n    }\n\n    \n    useEffect(() => {\n        fetchMovies();\n        fetchCategories();\n    },[])\n    \n    return (\n        <>\n        <Header/>\n        <div className='hero-content max-center' style={{backgroundImage:`url(${img_path}original/${selectedMovie.backdrop_path})`}}>\n           <div className='hero'>\n                { playTrailer ? <YouTube\n                    videoId={trailer.key}\n                /> : null}\n                <button onClick={() => settrailer()} id='hero-button'>Play trailer</button>\n                { playTrailer ? <button onClick={() => closeTrailer()} >Close trailer</button> : null}\n                <h1 id='hero-title' >{selectedMovie.title}</h1>\n                <p className='hero-overview'>{selectedMovie.overview}</p>\n            </div> \n            \n        </div>\n       \n        <form onSubmit={searchMovies}>\n           \n                <div className='select-content'>\n                    <label className='select-label'>Browse by</label>\n                        <select >\n                        {categories.map((ctgrs) =>\n                            <option value={ctgrs.name} >{ctgrs.name}</option>\n                         )}\n                        </select>\n                    <input \n                        className='search-movie'\n                        placeholder=\"Find a film\" \n                        onChange={(e) => setSearchValue(e.target.value)}    \n                        />\n                        <button className='search-btn'>Search</button>\n                </div>\n            \n        </form>\n        <section className='container-posters'>\n            {movies.map((filmes) =>  filmes.poster_path ?\n            <div>\n                <section className='moviePoster' onClick={fetchVids(filmes.id)}>\n                    <img src={`${img_path}w500/${filmes.poster_path}`} alt={`${filmes.original_title} poster`} onClick={() => setSelectedMovie(filmes) }/>\n                    <div>\n                    <h3>{filmes.original_title}</h3>\n                    <button> Add to watchlist</button>\n                    </div>\n                </section>\n            </div>\n                :<div> \n                        No poster found \n                    <h3> {filmes.original_title} </h3>\n                </div>\n            \n                )}\n        </section>\n        </>\n    )\n}\n\nexport default Lista;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAmB,oBAAnB;AACA,OAAO,sBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;;AAEA,SAASC,KAAT,GAAgB;EAAA;;EAEZ,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAiCZ,QAAQ,CAAC,EAAD,CAA/C;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAMmB,QAAQ,GAAG,6BAAjB;EACA,MAAMC,GAAG,GAAG,8BAAZ;;EAEA,MAAMC,WAAW,GAAG,MAAOV,WAAP,IAAuB;IACvC,MAAMW,IAAI,GAAGX,WAAW,GAAI,8EAA6EA,WAAY,6BAA7F,GAA4H,yDAApJ;IACA,MAAMY,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,IAAGE,IAAK,EAAhB,CAAL,CAClBG,IADkB,CACZC,QAAD,IAAeA,QAAQ,CAACC,IAAT,EADF,EAElBC,KAFkB,CAEXC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFG,CAAnB;IAGAvB,SAAS,CAACiB,IAAI,CAACS,OAAN,CAAT;IACAtB,gBAAgB,CAACa,IAAI,CAACS,OAAL,CAAa,CAAb,CAAD,CAAhB;IACA,OAAOC,SAAS,CAACxB,aAAa,CAACyB,EAAf,CAAhB;EACH,CARD;;EAUA,MAAMD,SAAS,GAAG,MAAOC,EAAP,IAAa;IAC3B,MAAMX,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,UAASc,EAAG,iEAApB,CAAL,CAClBT,IADkB,CACZU,GAAD,IAASA,GAAG,CAACR,IAAJ,EADI,EAElBC,KAFkB,CAEXC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFG,CAAnB;IAGA,MAAMO,OAAO,GAAGb,IAAI,CAACS,OAAL,CAAaK,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,UAAnB,CAA5B,CAAhB;IAEAhC,UAAU,CAAC4B,OAAD,CAAV;EACH,CAPD;;EASA,MAAMK,eAAe,GAAG,YAAY;IAChC,MAAM;MAACC;IAAD,IAAW,MAAMlB,KAAK,CAAC,uGAAD,CAAL,CACtBC,IADsB,CAChBU,GAAD,IAASA,GAAG,CAACR,IAAJ,EADQ,EAEtBC,KAFsB,CAEfC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFO,CAAvB;IAGAC,OAAO,CAACC,GAAR,CAAYW,MAAZ;IACA1B,aAAa,CAAC0B,MAAD,CAAb;EACH,CAND;;EAQA,MAAMC,UAAU,GAAE,MAAK;IACnBzB,gBAAgB,CAAC,CAACD,aAAF,CAAhB;EACH,CAFD;;EAIA,MAAM2B,UAAU,GAAG,MAAK;IACpB9B,cAAc,CAAC,IAAD,CAAd;EACH,CAFD;;EAIA,MAAM+B,YAAY,GAAG,MAAK;IACtB/B,cAAc,CAAC,KAAD,CAAd;EACH,CAFD;;EAKA,MAAMgC,YAAY,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;IACD3B,WAAW,CAACV,WAAD,CAAX;EACF,CAHD;;EAMAZ,SAAS,CAAC,MAAM;IACZsB,WAAW;IACXoB,eAAe;EAClB,CAHQ,EAGP,EAHO,CAAT;EAKA,oBACI;IAAA,wBACA,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAK,SAAS,EAAC,yBAAf;MAAyC,KAAK,EAAE;QAACQ,eAAe,EAAE,OAAM9B,QAAS,YAAWV,aAAa,CAACyC,aAAc;MAAxE,CAAhD;MAAA,uBACG;QAAK,SAAS,EAAC,MAAf;QAAA,WACOrC,WAAW,gBAAG,QAAC,OAAD;UACZ,OAAO,EAAEN,OAAO,CAAC4C;QADL;UAAA;UAAA;UAAA;QAAA,QAAH,GAER,IAHV,eAIK;UAAQ,OAAO,EAAE,MAAMP,UAAU,EAAjC;UAAqC,EAAE,EAAC,aAAxC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJL,EAKO/B,WAAW,gBAAG;UAAQ,OAAO,EAAE,MAAMgC,YAAY,EAAnC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAH,GAAoE,IALtF,eAMK;UAAI,EAAE,EAAC,YAAP;UAAA,UAAsBpC,aAAa,CAAC2C;QAApC;UAAA;UAAA;UAAA;QAAA,QANL,eAOK;UAAG,SAAS,EAAC,eAAb;UAAA,UAA8B3C,aAAa,CAAC4C;QAA5C;UAAA;UAAA;UAAA;QAAA,QAPL;MAAA;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QAFA,eAeA;MAAM,QAAQ,EAAEP,YAAhB;MAAA,uBAEQ;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACI;UAAO,SAAS,EAAC,cAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEQ;UAAA,UACC/B,UAAU,CAACuC,GAAX,CAAgBC,KAAD,iBACZ;YAAQ,KAAK,EAAEA,KAAK,CAAChB,IAArB;YAAA,UAA6BgB,KAAK,CAAChB;UAAnC;YAAA;YAAA;YAAA;UAAA,QADH;QADD;UAAA;UAAA;UAAA;QAAA,QAFR,eAOI;UACI,SAAS,EAAC,cADd;UAEI,WAAW,EAAC,aAFhB;UAGI,QAAQ,EAAGQ,CAAD,IAAOnC,cAAc,CAACmC,CAAC,CAACS,MAAF,CAASC,KAAV;QAHnC;UAAA;UAAA;UAAA;QAAA,QAPJ,eAYQ;UAAQ,SAAS,EAAC,YAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAZR;MAAA;QAAA;QAAA;QAAA;MAAA;IAFR;MAAA;MAAA;MAAA;IAAA,QAfA,eAiCA;MAAS,SAAS,EAAC,mBAAnB;MAAA,UACKpD,MAAM,CAACiD,GAAP,CAAYI,MAAD,IAAaA,MAAM,CAACC,WAAP,gBACzB;QAAA,uBACI;UAAS,SAAS,EAAC,aAAnB;UAAiC,OAAO,EAAE1B,SAAS,CAACyB,MAAM,CAACxB,EAAR,CAAnD;UAAA,wBACI;YAAK,GAAG,EAAG,GAAEf,QAAS,QAAOuC,MAAM,CAACC,WAAY,EAAhD;YAAmD,GAAG,EAAG,GAAED,MAAM,CAACE,cAAe,SAAjF;YAA2F,OAAO,EAAE,MAAMlD,gBAAgB,CAACgD,MAAD;UAA1H;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,wBACA;cAAA,UAAKA,MAAM,CAACE;YAAZ;cAAA;cAAA;cAAA;YAAA,QADA,eAEA;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADyB,gBAUpB;QAAA,2CAEG;UAAA,gBAAMF,MAAM,CAACE,cAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IADL;MAAA;MAAA;MAAA;IAAA,QAjCA;EAAA,gBADJ;AAsDH;;GArHQxD,K;;KAAAA,K;AAuHT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}