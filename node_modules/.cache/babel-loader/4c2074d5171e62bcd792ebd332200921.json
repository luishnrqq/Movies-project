{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _loadYouTubeIframeApi = require('./loadYouTubeIframeApi');\n\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\n\nvar _YouTubePlayer = require('./YouTubePlayer');\n\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */\n\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */\n\n\nvar youtubeIframeAPI = void 0;\n/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param maybeElementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */\n\nexports.default = function (maybeElementId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var emitter = (0, _sister2.default)();\n\n  if (!youtubeIframeAPI) {\n    youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n  }\n\n  if (options.events) {\n    throw new Error('Event handlers cannot be overwritten.');\n  }\n\n  if (typeof maybeElementId === 'string' && !document.getElementById(maybeElementId)) {\n    throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n  }\n\n  options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n  var playerAPIReady = new Promise(function (resolve) {\n    if ((typeof maybeElementId === 'undefined' ? 'undefined' : _typeof(maybeElementId)) === 'object' && maybeElementId.playVideo instanceof Function) {\n      var player = maybeElementId;\n      resolve(player);\n    } else {\n      // asume maybeElementId can be rendered inside\n      // eslint-disable-next-line promise/catch-or-return\n      youtubeIframeAPI.then(function (YT) {\n        // eslint-disable-line promise/prefer-await-to-then\n        var player = new YT.Player(maybeElementId, options);\n        emitter.on('ready', function () {\n          resolve(player);\n        });\n        return null;\n      });\n    }\n  });\n\n  var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n\n  playerApi.on = emitter.on;\n  playerApi.off = emitter.off;\n  return playerApi;\n};\n\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_sister","require","_sister2","_interopRequireDefault","_loadYouTubeIframeApi","_loadYouTubeIframeApi2","_YouTubePlayer","_YouTubePlayer2","__esModule","default","youtubeIframeAPI","maybeElementId","options","arguments","length","undefined","strictState","emitter","events","Error","document","getElementById","proxyEvents","playerAPIReady","Promise","resolve","playVideo","Function","player","then","YT","Player","on","playerApi","promisifyPlayer","off","module"],"sources":["/home/lois/Documentos/filmlist/Project-film-list/film-list/node_modules/youtube-player/dist/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _loadYouTubeIframeApi = require('./loadYouTubeIframeApi');\n\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\n\nvar _YouTubePlayer = require('./YouTubePlayer');\n\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */\n\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */\nvar youtubeIframeAPI = void 0;\n\n/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param maybeElementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */\n\nexports.default = function (maybeElementId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var emitter = (0, _sister2.default)();\n\n  if (!youtubeIframeAPI) {\n    youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n  }\n\n  if (options.events) {\n    throw new Error('Event handlers cannot be overwritten.');\n  }\n\n  if (typeof maybeElementId === 'string' && !document.getElementById(maybeElementId)) {\n    throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n  }\n\n  options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n\n  var playerAPIReady = new Promise(function (resolve) {\n    if ((typeof maybeElementId === 'undefined' ? 'undefined' : _typeof(maybeElementId)) === 'object' && maybeElementId.playVideo instanceof Function) {\n      var player = maybeElementId;\n\n      resolve(player);\n    } else {\n      // asume maybeElementId can be rendered inside\n      // eslint-disable-next-line promise/catch-or-return\n      youtubeIframeAPI.then(function (YT) {\n        // eslint-disable-line promise/prefer-await-to-then\n        var player = new YT.Player(maybeElementId, options);\n\n        emitter.on('ready', function () {\n          resolve(player);\n        });\n\n        return null;\n      });\n    }\n  });\n\n  var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n\n  playerApi.on = emitter.on;\n  playerApi.off = emitter.off;\n\n  return playerApi;\n};\n\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script"}